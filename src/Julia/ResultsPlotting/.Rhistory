axis.text.x=element_text(angle = 45,vjust = 1.2, hjust=1)
)
fig_name=sprintf("./%s/Patient4_Visit1_performance_gamma%.2f.png",PlotFolder,gamma_val)
ggsave(fig_name,height=8,width=7)
## fixing delta=delta test and checking sensitivity to misspesified gamma
g_limit=43
delta_test_value=0.1
df7b=df7a%>%filter((delta==delta_test | delta==0) & (delta_test==delta_test_value))
df7b=snip_df(df7b,g_limit,"test")
df7b_marks=df_choose_marker(df7a,"test")%>%filter(g_test>=g_limit & (delta==delta_test | delta==0)  & delta_test==delta_test_value)
colnumlegend=1
g <- ggplot(data=df7b)
g <- g + geom_line(aes(x=mu_test,y=g_test,color=Method,linetype=Method)) +
geom_point(data=df7b_marks,aes(x=mu_test,y=g_test,color=Method,shape=Method,size=Method))
g + scale_shape_manual(label=MethodLabels, values=c(16,17,15,18,6,3,4,0),guide=guide_legend(ncol=colnumlegend) )+
scale_color_discrete(label=MethodLabels,guide=guide_legend(ncol=colnumlegend) )+
scale_size_manual(label=MethodLabels, values=c(2,2,2,3,2,3,3,2), guide=guide_legend(ncol=colnumlegend))+
scale_linetype_discrete(label=MethodLabels, guide=guide_legend(ncol=colnumlegend) )+
scale_x_continuous(breaks=seq(1.01,1.4,0.02),lim=c(1.07,1.23))+
scale_y_continuous(breaks=c(seq(20,60,2)),lim=c(g_limit,52))+
ylab(TeX("\\hat{\\underline{d}}")) + xlab(TeX("$\\hat{\\mu}$")) +
labs(linetype="Method",color="Method",shape="Method") +
theme_bw(base_size = 12, base_family = "Helvetica") +
theme(legend.position="none",
legend.title = element_text(size = 10),
legend.text  = element_text(size = 10),
legend.box = "vertical",
legend.background = element_rect(color="black"),
legend.direction="vertical", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"))
fig_name=sprintf("%s/Patient4_Visit1_performance_gamma%.2f_delta%.2f.png",PlotFolder,gamma_val,delta_test_value)
if (gamma_val==0.02){
ggsave(fig_name,height=3,width=3.5)
}
else if (gamma_val==0.04){
ggsave(fig_name,height=3,width=5)
}
dev.off()
}
#start figures 10 and 16-17
for (gamma_val in c(0.02,0.04)){
df7 <- read.csv(EvaluationFile)
df7=df7[df7$gamma_test == gamma_val,]
df7=df7[df7$delta_test >0,]
df7_nominal=df7%>%filter(delta==0)
df7_nominal$Method=("Nominal")
df7=df7[df7$delta == df7$delta_test,]
df7_box=df7[df7$gamma == 1,]
df7_box$Method=("Robust Box")
df7=df7[df7$gamma < 1,]
df7$Method=sprintf("Robust $\\gamma=%.2f$",df7$gamma)
df7=rbind(df7_nominal,df7,df7_box)
df7$Method=ordered(df7$Method)
Methods=levels(df7$Method)
MethodLabels=lapply(Methods,TeX)
df7$deltaLabel=
factor(df7$delta_test, labels=sprintf("delta~'='~%.2f",as.numeric(unique(sort(df7$delta_test)))))
df7=df7%>%filter(round(delta_test*100)%%2==0)
df7a=df7%>%filter(gamma==1 | delta>0)
min_g_test=40
df7_new=snip_df(df7a,min_g_test,"test")
df7_new1=df7_new%>%filter(g_test<min_g_test)%>%mutate(g_test=NaN)
df7_new=df7_new%>%filter(g_test>=min_g_test)
df7_new=rbind(df7_new,df7_new1)%>%filter(mu_test>=1.05)
df7_marks=df_choose_marker(df7a,"test")
df7_marks=df7_marks%>%filter(g_test>=min_g_test)
legendcolnum=2
facetcolnum=3
g <- ggplot(data=df7_new)
g <- g + geom_point(data=df7_marks,aes(x=mu_test,y=g_test,color=Method,shape=Method,size=Method)) + geom_line(aes(x=mu_test,y=g_test,color=Method,linetype=Method))
g +   facet_wrap(~deltaLabel,ncol = facetcolnum,labeller=label_parsed,scales="free")+
scale_y_continuous(breaks=seq(min_g_test,57,2))+
scale_x_continuous(breaks=seq(1.05,1.4,0.025))+
scale_shape_manual(label=MethodLabels, values=c(16, 17, 15,18,6,3,4,0),guide=guide_legend(ncol=legendcolnum) )+
scale_color_discrete(label=MethodLabels, guide=guide_legend(ncol=legendcolnum) )+
scale_size_manual(values=c(2,2,2,3,2,3,3,2), label=MethodLabels, guide=guide_legend(ncol=legendcolnum))+
scale_linetype_discrete(label=MethodLabels, guide=guide_legend(ncol=legendcolnum) )+
ylab(TeX("\\hat{\\underline{d}}")) + xlab(TeX("$\\hat{\\mu}$")) +
labs(linetype="Method",color="Method",shape="Method") +
theme_bw(base_size = 12, base_family = "Helvetica") + #ylim(73,83) +
theme(legend.title = element_text(size = 10), legend.text  = element_text(size = 10),
legend.position = c(.4, .25),#
legend.justification = c(0.1, 1.1),
#        legend.position = "bottom",
legend.box = "vertical",
legend.background = element_rect(color="black"),
#legend.direction="horizontal", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"),
legend.direction="vertical", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"),
strip.background = element_blank(),
axis.text.x=element_text(angle = 45,vjust = 1.2, hjust=1)
)
fig_name=sprintf("./%s/Patient4_Visit1_performance_gamma%.2f.png",PlotFolder,gamma_val)
ggsave(fig_name,height=8,width=7)
## fixing delta=delta test and checking sensitivity to misspesified gamma
g_limit=43
delta_test_value=0.1
df7b=df7a%>%filter((delta==delta_test | delta==0) & (delta_test==delta_test_value))
df7b=snip_df(df7b,g_limit,"test")
df7b_marks=df_choose_marker(df7a,"test")%>%filter(g_test>=g_limit & (delta==delta_test | delta==0)  & delta_test==delta_test_value)
colnumlegend=1
g <- ggplot(data=df7b)
g <- g + geom_line(aes(x=mu_test,y=g_test,color=Method,linetype=Method)) +
geom_point(data=df7b_marks,aes(x=mu_test,y=g_test,color=Method,shape=Method,size=Method))
g + scale_shape_manual(label=MethodLabels, values=c(16,17,15,18,6,3,4,0),guide=guide_legend(ncol=colnumlegend) )+
scale_color_discrete(label=MethodLabels,guide=guide_legend(ncol=colnumlegend) )+
scale_size_manual(label=MethodLabels, values=c(2,2,2,3,2,3,3,2), guide=guide_legend(ncol=colnumlegend))+
scale_linetype_discrete(label=MethodLabels, guide=guide_legend(ncol=colnumlegend) )+
scale_x_continuous(breaks=seq(1.01,1.4,0.02),lim=c(1.07,1.23))+
scale_y_continuous(breaks=c(seq(20,60,2)),lim=c(g_limit,52))+
ylab(TeX("\\hat{\\underline{d}}")) + xlab(TeX("$\\hat{\\mu}$")) +
labs(linetype="Method",color="Method",shape="Method") +
theme_bw(base_size = 12, base_family = "Helvetica") +
theme(legend.position="none",
legend.title = element_text(size = 10),
legend.text  = element_text(size = 10),
legend.box = "vertical",
legend.background = element_rect(color="black"),
legend.direction="vertical", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"))
fig_name=sprintf("%s/Patient4_Visit1_performance_gamma%.2f_delta%.2f.png",PlotFolder,gamma_val,delta_test_value)
if (gamma_val==0.02){
ggsave(fig_name,height=3,width=3.5)
}
else if (gamma_val==0.04){
ggsave(fig_name,height=3,width=5)
}
}
debugSource("C:/Users/shimrit/Dropbox (MIT)/technion/research/Robust Radio Therapy (All)/RobustRTPCode/RobustRTPStatic/src/Julia/ResultsPlotting/plot_graphs.R", echo=TRUE)
#start figures 10 and 16-17
for (gamma_val in c(0.02,0.04)){
df7 <- read.csv(EvaluationFile)
df7=df7[df7$gamma_test == gamma_val,]
df7=df7[df7$delta_test >0,]
df7_nominal=df7%>%filter(delta==0)
df7_nominal$Method=("Nominal")
df7=df7[df7$delta == df7$delta_test,]
df7_box=df7[df7$gamma == 1,]
df7_box$Method=("Robust Box")
df7=df7[df7$gamma < 1,]
df7$Method=sprintf("Robust $\\gamma=%.2f$",df7$gamma)
df7=rbind(df7_nominal,df7,df7_box)
df7$Method=ordered(df7$Method)
Methods=levels(df7$Method)
MethodLabels=lapply(Methods,TeX)
df7$deltaLabel=
factor(df7$delta_test, labels=sprintf("delta~'='~%.2f",as.numeric(unique(sort(df7$delta_test)))))
df7=df7%>%filter(round(delta_test*100)%%2==0)
df7a=df7%>%filter(gamma==1 | delta>0)
min_g_test=40
df7_new=snip_df(df7a,min_g_test,"test")
df7_new1=df7_new%>%filter(g_test<min_g_test)%>%mutate(g_test=NaN)
df7_new=df7_new%>%filter(g_test>=min_g_test)
df7_new=rbind(df7_new,df7_new1)%>%filter(mu_test>=1.05)
df7_marks=df_choose_marker(df7a,"test")
df7_marks=df7_marks%>%filter(g_test>=min_g_test)
legendcolnum=2
facetcolnum=3
g <- ggplot(data=df7_new)
g <- g + geom_point(data=df7_marks,aes(x=mu_test,y=g_test,color=Method,shape=Method,size=Method)) + geom_line(aes(x=mu_test,y=g_test,color=Method,linetype=Method))
g +   facet_wrap(~deltaLabel,ncol = facetcolnum,labeller=label_parsed,scales="free")+
scale_y_continuous(breaks=seq(min_g_test,57,2))+
scale_x_continuous(breaks=seq(1.05,1.4,0.025))+
scale_shape_manual(label=MethodLabels, values=c(16, 17, 15,18,6,3,4,0),guide=guide_legend(ncol=legendcolnum) )+
scale_color_discrete(label=MethodLabels, guide=guide_legend(ncol=legendcolnum) )+
scale_size_manual(values=c(2,2,2,3,2,3,3,2), label=MethodLabels, guide=guide_legend(ncol=legendcolnum))+
scale_linetype_discrete(label=MethodLabels, guide=guide_legend(ncol=legendcolnum) )+
ylab(TeX("\\hat{\\underline{d}}")) + xlab(TeX("$\\hat{\\mu}$")) +
labs(linetype="Method",color="Method",shape="Method") +
theme_bw(base_size = 12, base_family = "Helvetica") + #ylim(73,83) +
theme(legend.title = element_text(size = 10), legend.text  = element_text(size = 10),
legend.position = c(.4, .25),#
legend.justification = c(0.1, 1.1),
#        legend.position = "bottom",
legend.box = "vertical",
legend.background = element_rect(color="black"),
#legend.direction="horizontal", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"),
legend.direction="vertical", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"),
strip.background = element_blank(),
axis.text.x=element_text(angle = 45,vjust = 1.2, hjust=1)
)
fig_name=sprintf("./%s/Patient4_Visit1_performance_gamma%.2f.png",PlotFolder,gamma_val)
ggsave(fig_name,height=8,width=7)
## fixing delta=delta test and checking sensitivity to misspesified gamma
g_limit=43
delta_test_value=0.1
df7b=df7a%>%filter((delta==delta_test | delta==0) & (delta_test==delta_test_value))
df7b=snip_df(df7b,g_limit,"test")
df7b_marks=df_choose_marker(df7a,"test")%>%filter(g_test>=g_limit & (delta==delta_test | delta==0)  & delta_test==delta_test_value)
colnumlegend=1
g <- ggplot(data=df7b)
g <- g + geom_line(aes(x=mu_test,y=g_test,color=Method,linetype=Method)) +
geom_point(data=df7b_marks,aes(x=mu_test,y=g_test,color=Method,shape=Method,size=Method))
g<- g + scale_shape_manual(label=MethodLabels, values=c(16,17,15,18,6,3,4,0),guide=guide_legend(ncol=colnumlegend) )+
scale_color_discrete(label=MethodLabels,guide=guide_legend(ncol=colnumlegend) )+
scale_size_manual(label=MethodLabels, values=c(2,2,2,3,2,3,3,2), guide=guide_legend(ncol=colnumlegend))+
scale_linetype_discrete(label=MethodLabels, guide=guide_legend(ncol=colnumlegend) )+
scale_y_continuous(breaks=c(seq(20,60,2)),lim=c(g_limit,52))+
ylab(TeX("\\hat{\\underline{d}}")) + xlab(TeX("$\\hat{\\mu}$")) +
labs(linetype="Method",color="Method",shape="Method") +
theme_bw(base_size = 12, base_family = "Helvetica") +
theme(legend.title = element_text(size = 10),
legend.text  = element_text(size = 10),
legend.box = "vertical",
legend.background = element_rect(color="black"),
legend.direction="vertical", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"))
fig_name=sprintf("%s/Patient4_Visit1_performance_gamma%.2f_delta%.2f.png",PlotFolder,gamma_val,delta_test_value)
if (gamma_val==0.02){
g+scale_x_continuous(breaks=seq(1.01,1.4,0.02),lim=c(1.09,1.23))+
theme(legend.position="none")
ggsave(fig_name,height=3,width=3.5)
}
else if (gamma_val==0.04){
g+scale_x_continuous(breaks=seq(1.02,1.4,0.02),lim=c(1.12,1.26))+
theme(legend.position="none")
ggsave(fig_name,height=3,width=5)
}
}
#start figures 10 and 16-17
for (gamma_val in c(0.02,0.04)){
df7 <- read.csv(EvaluationFile)
df7=df7[df7$gamma_test == gamma_val,]
df7=df7[df7$delta_test >0,]
df7_nominal=df7%>%filter(delta==0)
df7_nominal$Method=("Nominal")
df7=df7[df7$delta == df7$delta_test,]
df7_box=df7[df7$gamma == 1,]
df7_box$Method=("Robust Box")
df7=df7[df7$gamma < 1,]
df7$Method=sprintf("Robust $\\gamma=%.2f$",df7$gamma)
df7=rbind(df7_nominal,df7,df7_box)
df7$Method=ordered(df7$Method)
Methods=levels(df7$Method)
MethodLabels=lapply(Methods,TeX)
df7$deltaLabel=
factor(df7$delta_test, labels=sprintf("delta~'='~%.2f",as.numeric(unique(sort(df7$delta_test)))))
df7=df7%>%filter(round(delta_test*100)%%2==0)
df7a=df7%>%filter(gamma==1 | delta>0)
min_g_test=40
df7_new=snip_df(df7a,min_g_test,"test")
df7_new1=df7_new%>%filter(g_test<min_g_test)%>%mutate(g_test=NaN)
df7_new=df7_new%>%filter(g_test>=min_g_test)
df7_new=rbind(df7_new,df7_new1)%>%filter(mu_test>=1.05)
df7_marks=df_choose_marker(df7a,"test")
df7_marks=df7_marks%>%filter(g_test>=min_g_test)
legendcolnum=2
facetcolnum=3
g <- ggplot(data=df7_new)
g <- g + geom_point(data=df7_marks,aes(x=mu_test,y=g_test,color=Method,shape=Method,size=Method)) + geom_line(aes(x=mu_test,y=g_test,color=Method,linetype=Method))
g +   facet_wrap(~deltaLabel,ncol = facetcolnum,labeller=label_parsed,scales="free")+
scale_y_continuous(breaks=seq(min_g_test,57,2))+
scale_x_continuous(breaks=seq(1.05,1.4,0.025))+
scale_shape_manual(label=MethodLabels, values=c(16, 17, 15,18,6,3,4,0),guide=guide_legend(ncol=legendcolnum) )+
scale_color_discrete(label=MethodLabels, guide=guide_legend(ncol=legendcolnum) )+
scale_size_manual(values=c(2,2,2,3,2,3,3,2), label=MethodLabels, guide=guide_legend(ncol=legendcolnum))+
scale_linetype_discrete(label=MethodLabels, guide=guide_legend(ncol=legendcolnum) )+
ylab(TeX("\\hat{\\underline{d}}")) + xlab(TeX("$\\hat{\\mu}$")) +
labs(linetype="Method",color="Method",shape="Method") +
theme_bw(base_size = 12, base_family = "Helvetica") + #ylim(73,83) +
theme(legend.title = element_text(size = 10), legend.text  = element_text(size = 10),
legend.position = c(.4, .25),#
legend.justification = c(0.1, 1.1),
#        legend.position = "bottom",
legend.box = "vertical",
legend.background = element_rect(color="black"),
#legend.direction="horizontal", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"),
legend.direction="vertical", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"),
strip.background = element_blank(),
axis.text.x=element_text(angle = 45,vjust = 1.2, hjust=1)
)
fig_name=sprintf("./%s/Patient4_Visit1_performance_gamma%.2f.png",PlotFolder,gamma_val)
ggsave(fig_name,height=8,width=7)
## fixing delta=delta test and checking sensitivity to misspesified gamma
g_limit=43
delta_test_value=0.1
df7b=df7a%>%filter((delta==delta_test | delta==0) & (delta_test==delta_test_value))
df7b=snip_df(df7b,g_limit,"test")
df7b_marks=df_choose_marker(df7a,"test")%>%filter(g_test>=g_limit & (delta==delta_test | delta==0)  & delta_test==delta_test_value)
colnumlegend=1
g <- ggplot(data=df7b)
g <- g + geom_line(aes(x=mu_test,y=g_test,color=Method,linetype=Method)) +
geom_point(data=df7b_marks,aes(x=mu_test,y=g_test,color=Method,shape=Method,size=Method))
g<- g + scale_shape_manual(label=MethodLabels, values=c(16,17,15,18,6,3,4,0),guide=guide_legend(ncol=colnumlegend) )+
scale_color_discrete(label=MethodLabels,guide=guide_legend(ncol=colnumlegend) )+
scale_size_manual(label=MethodLabels, values=c(2,2,2,3,2,3,3,2), guide=guide_legend(ncol=colnumlegend))+
scale_linetype_discrete(label=MethodLabels, guide=guide_legend(ncol=colnumlegend) )+
scale_y_continuous(breaks=c(seq(20,60,2)),lim=c(g_limit,52))+
ylab(TeX("\\hat{\\underline{d}}")) + xlab(TeX("$\\hat{\\mu}$")) +
labs(linetype="Method",color="Method",shape="Method") +
theme_bw(base_size = 12, base_family = "Helvetica") +
theme(legend.title = element_text(size = 10),
legend.text  = element_text(size = 10),
legend.box = "vertical",
legend.background = element_rect(color="black"),
legend.direction="vertical", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"))
fig_name=sprintf("%s/Patient4_Visit1_performance_gamma%.2f_delta%.2f.png",PlotFolder,gamma_val,delta_test_value)
if (gamma_val==0.02){
g+scale_x_continuous(breaks=seq(1.01,1.4,0.02),lim=c(1.09,1.23))+
theme(legend.position="none")
ggsave(fig_name,height=3,width=3.5)
}
else if (gamma_val==0.04){
g+scale_x_continuous(breaks=seq(1.02,1.4,0.02),lim=c(1.12,1.26))+
theme(legend.title = element_text(size = 10), legend.text  = element_text(size = 10))
ggsave(fig_name,height=3,width=5)
}
}
df8 <- read.csv(EvaluationFile)
df8 <-  subset(df8, round(delta*100)%%2 ==0 & gamma==gamma_test & delta_test%in%c(0.02,0.06,0.1,0.14) & gamma_test %in% c(0.02,0.04))
df8 <-df8[order(df8$delta),]
df8$Method=sprintf("Robust $\\delta=%.2f$",df8$delta)
df8 <- read.csv(EvaluationFile)
setwd(dirname(getActiveDocumentContext()$path))       # Set working directory to source file location
df8 <- read.csv(EvaluationFile)
results="patient4_visit1_20230906_no_dose_vol_no_zeros.csv"
evaluation="patient4_visit1_20230930_solution_evaluations.csv"
PlotFolder =sprintf("%s/Plots/Patient4/",Folder)
df8 <- read.csv(EvaluationFile)
df8 <-  subset(df8, round(delta*100)%%2 ==0 & gamma==gamma_test & delta_test%in%c(0.02,0.06,0.1,0.14) & gamma_test %in% c(0.02,0.04))
results="patient4_visit1_20230906_no_dose_vol_no_zeros.csv"
evaluation="patient4_visit1_20230930_solution_evaluations.csv"
PlotFolder =sprintf("%s/Plots/Patient4/",Folder)
ResultsFile=sprintf("%s/%s",Folder,results)
EvaluationFile=sprintf("%s/%s",Folder,evaluation)
df8 <- read.csv(EvaluationFile)
df8 <-  subset(df8, round(delta*100)%%2 ==0 & gamma==gamma_test & delta_test%in%c(0.02,0.06,0.1,0.14) & gamma_test %in% c(0.02,0.04))
df8 <-df8[order(df8$delta),]
df8$Method=sprintf("Robust $\\delta=%.2f$",df8$delta)
df8$Method[df8$delta==0]=sprintf("Nominal")
df8$gammaLabel=
factor(df8$gamma_test, labels=sprintf("gamma~'='~%.2f",as.numeric(unique(sort(df8$gamma_test)))))
df8$deltaLabel=
factor(df8$delta_test, labels=sprintf("delta~'='~%.2f",as.numeric(unique(sort(df8$delta_test)))))
#df8=add_zero_dose(df8)
g_limit=45
df8_new=snip_df(df8,g_limit,"test")
temp=df8_new%>%filter(g_test<g_limit,mu_test>1)%>%mutate(g_test=NaN);
df8_new=rbind(df8_new%>%filter(g_test>=g_limit),temp)
df8_marks=df_choose_marker(df8,"test")%>%filter(g_test>=g_limit)
Methods=unique(df8$Method)
MethodLabels=lapply(Methods,TeX)
legendcolnum=1
facetcolnum=1
g <- ggplot(data=df8_new)
g <- g + geom_point(data=df8_marks,aes(x=mu_test,y=g_test,color=Method,shape=Method,size=Method)) + geom_line(aes(x=mu_test,y=g_test,color=Method,linetype=Method))
g +   facet_grid(deltaLabel~gammaLabel,labeller=label_parsed,scales="free")+#ncol = facetcolnum,
scale_y_continuous(breaks=seq(31,57,2))+
scale_x_continuous(breaks=seq(1.05,1.4,0.025))+
scale_shape_manual(label=MethodLabels, values=c(16, 17, 15,18,6,3,4,2,8,5,7,0),guide=guide_legend(ncol=legendcolnum) )+
scale_color_discrete(label=MethodLabels, guide=guide_legend(ncol=legendcolnum) )+
scale_size_manual(values=c(2,2,2,3,2,3,3,2,2,2,2,2), label=MethodLabels, guide=guide_legend(ncol=legendcolnum))+
scale_linetype_discrete(label=MethodLabels, guide=guide_legend(ncol=legendcolnum) )+
ylab(TeX("\\hat{\\underline{d}}")) + xlab(TeX("$\\hat{\\mu}$")) +
labs(linetype="Method",color="Method",shape="Method") +
theme_bw(base_size = 12, base_family = "Helvetica") +
theme(legend.title = element_text(size = 10), legend.text  = element_text(size = 10),
#legend.position = c(.4, .2),#
#legend.justification = c(0.1, 1.1),
#legend.position = "bottom",
legend.box = "vertical",
legend.background = element_rect(color="black"),
#legend.direction="horizontal", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"),
legend.direction="vertical", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"),
strip.background = element_blank(),
axis.text.x=element_text(angle = 45,vjust = 1.2, hjust=1)
)
delta_val=0.02
gamma_val=0.04
gamma_val=0.04
for (delta_val in c(0.02,0.12))
for (delta_val in c(0.02,0.12)){
if (delta_val==0.02){
g_limit=50
g_ub =56
x_lb = 1.1
x_ub = 1.24
} else if(delta_val==0.12){
g_limit=43.5
g_ub = 48.5
x_lb = 1.12
x_ub = 1.26
}
df8b=df8[df8$delta_test==delta_val & df8$gamma_test==gamma_val,]
df8b_new=snip_df(df8b,g_limit,"test")
df8b_new$Method=ordered(df8b_new$Method)
MethodLabels=lapply(levels(df8b_new$Method),TeX)
df8b_marker=df_choose_marker(df8b,"test")%>%filter(g_test>=g_limit)
colnumlegend=1
g <- ggplot(data=df8b_new)
g <- g + geom_point(data=df8b_marker,aes(x=mu_test,y=g_test,color=Method,shape=Method,size=Method)) + geom_line(aes(x=mu_test,y=g_test,color=Method,linetype=Method))
g<-  g +  scale_x_continuous(breaks=seq(1.1,1.4,0.02),lim=c(x_lb,x_ub))+
scale_y_continuous(breaks=c(seq(40,60,1)),lim=c(g_limit,g_ub))+
scale_shape_manual(label=MethodLabels,  values=c(16, 17, 15,18,6,3,4,2,8,5,7,9,0),guide=guide_legend(ncol=colnumlegend) )+
scale_color_discrete(label=MethodLabels,  guide=guide_legend(ncol=colnumlegend) )+
scale_size_manual(values=c(2,2,2,3,2,3,3,2,2,2,2), label=MethodLabels, guide=guide_legend(ncol=colnumlegend))+
scale_linetype_discrete(label=MethodLabels, guide=guide_legend(ncol=colnumlegend) )+
ylab(TeX("\\hat{\\underline{d}}")) + xlab(TeX("$\\hat{\\mu}$")) +
labs(linetype="Method",color="Method",shape="Method") +
theme_bw(base_size = 12, base_family = "Helvetica") +
theme(legend.title = element_text(size = 10),
legend.text  = element_text(size = 10),
legend.box = "vertical",
legend.background = element_rect(color="black"),
legend.direction="vertical", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"),
strip.background = element_blank())
fig_name=sprintf("%s/Patient4_Visit1_performance_delta%.2f_gamma%.2f.png",PlotFolder,delta_val,gamma_val)
if (delta_val==0.02){
g+theme(legend.position="none")
ggsave(fig_name,height=3,width=3.5)
} else if (delta_val==0.12){
g+theme(legend.title = element_text(size = 10), legend.text  = element_text(size = 10))
ggsave(fig_name,height=3,width=5)
}
}
df8 <- read.csv(EvaluationFile)
df8 <-  subset(df8, round(delta*100)%%2 ==0 & gamma==gamma_test & delta_test%in%c(0.02,0.04,0.06,0.08,0.1,0.12,0.14) & gamma_test %in% c(0.02,0.04))
df8 <-df8[order(df8$delta),]
df8$Method=sprintf("Robust $\\delta=%.2f$",df8$delta)
df8$Method[df8$delta==0]=sprintf("Nominal")
df8$gammaLabel=
factor(df8$gamma_test, labels=sprintf("gamma~'='~%.2f",as.numeric(unique(sort(df8$gamma_test)))))
df8$deltaLabel=
factor(df8$delta_test, labels=sprintf("delta~'='~%.2f",as.numeric(unique(sort(df8$delta_test)))))
#start figure 11
gamma_val=0.04
for (delta_val in c(0.02,0.12)){
if (delta_val==0.02){
g_limit=50
g_ub =56
x_lb = 1.1
x_ub = 1.24
} else if(delta_val==0.12){
g_limit=43.5
g_ub = 48.5
x_lb = 1.12
x_ub = 1.26
}
df8b=df8[df8$delta_test==delta_val & df8$gamma_test==gamma_val,]
df8b_new=snip_df(df8b,g_limit,"test")
df8b_new$Method=ordered(df8b_new$Method)
MethodLabels=lapply(levels(df8b_new$Method),TeX)
df8b_marker=df_choose_marker(df8b,"test")%>%filter(g_test>=g_limit)
colnumlegend=1
g <- ggplot(data=df8b_new)
g <- g + geom_point(data=df8b_marker,aes(x=mu_test,y=g_test,color=Method,shape=Method,size=Method)) + geom_line(aes(x=mu_test,y=g_test,color=Method,linetype=Method))
g<-  g +  scale_x_continuous(breaks=seq(1.1,1.4,0.02),lim=c(x_lb,x_ub))+
scale_y_continuous(breaks=c(seq(40,60,1)),lim=c(g_limit,g_ub))+
scale_shape_manual(label=MethodLabels,  values=c(16, 17, 15,18,6,3,4,2,8,5,7,9,0),guide=guide_legend(ncol=colnumlegend) )+
scale_color_discrete(label=MethodLabels,  guide=guide_legend(ncol=colnumlegend) )+
scale_size_manual(values=c(2,2,2,3,2,3,3,2,2,2,2), label=MethodLabels, guide=guide_legend(ncol=colnumlegend))+
scale_linetype_discrete(label=MethodLabels, guide=guide_legend(ncol=colnumlegend) )+
ylab(TeX("\\hat{\\underline{d}}")) + xlab(TeX("$\\hat{\\mu}$")) +
labs(linetype="Method",color="Method",shape="Method") +
theme_bw(base_size = 12, base_family = "Helvetica") +
theme(legend.title = element_text(size = 10),
legend.text  = element_text(size = 10),
legend.box = "vertical",
legend.background = element_rect(color="black"),
legend.direction="vertical", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"),
strip.background = element_blank())
fig_name=sprintf("%s/Patient4_Visit1_performance_delta%.2f_gamma%.2f.png",PlotFolder,delta_val,gamma_val)
if (delta_val==0.02){
g+theme(legend.position="none")
ggsave(fig_name,height=3,width=3.5)
} else if (delta_val==0.12){
g+theme(legend.title = element_text(size = 10), legend.text  = element_text(size = 10))
ggsave(fig_name,height=3,width=5)
}
}
#start figure 11
gamma_val=0.04
for (delta_val in c(0.02,0.14)){
if (delta_val==0.02){
g_limit=50
g_ub =56
x_lb = 1.1
x_ub = 1.24
} else if(delta_val==0.14){
g_limit=43.5
g_ub = 48.5
x_lb = 1.12
x_ub = 1.26
}
df8b=df8[df8$delta_test==delta_val & df8$gamma_test==gamma_val,]
df8b_new=snip_df(df8b,g_limit,"test")
df8b_new$Method=ordered(df8b_new$Method)
MethodLabels=lapply(levels(df8b_new$Method),TeX)
df8b_marker=df_choose_marker(df8b,"test")%>%filter(g_test>=g_limit)
colnumlegend=1
g <- ggplot(data=df8b_new)
g <- g + geom_point(data=df8b_marker,aes(x=mu_test,y=g_test,color=Method,shape=Method,size=Method)) + geom_line(aes(x=mu_test,y=g_test,color=Method,linetype=Method))
g<-  g +  scale_x_continuous(breaks=seq(1.1,1.4,0.02),lim=c(x_lb,x_ub))+
scale_y_continuous(breaks=c(seq(40,60,1)),lim=c(g_limit,g_ub))+
scale_shape_manual(label=MethodLabels,  values=c(16, 17, 15,18,6,3,4,2,8,5,7,9,0),guide=guide_legend(ncol=colnumlegend) )+
scale_color_discrete(label=MethodLabels,  guide=guide_legend(ncol=colnumlegend) )+
scale_size_manual(values=c(2,2,2,3,2,3,3,2,2,2,2), label=MethodLabels, guide=guide_legend(ncol=colnumlegend))+
scale_linetype_discrete(label=MethodLabels, guide=guide_legend(ncol=colnumlegend) )+
ylab(TeX("\\hat{\\underline{d}}")) + xlab(TeX("$\\hat{\\mu}$")) +
labs(linetype="Method",color="Method",shape="Method") +
theme_bw(base_size = 12, base_family = "Helvetica") +
theme(legend.title = element_text(size = 10),
legend.text  = element_text(size = 10),
legend.box = "vertical",
legend.background = element_rect(color="black"),
legend.direction="vertical", legend.margin=margin(t = 1, r = 6, b = 1, l = 3, unit = "pt"),
strip.background = element_blank())
fig_name=sprintf("%s/Patient4_Visit1_performance_delta%.2f_gamma%.2f.png",PlotFolder,delta_val,gamma_val)
if (delta_val==0.02){
g+theme(legend.position="none")
ggsave(fig_name,height=3,width=3.5)
} else if (delta_val==0.14){
g+theme(legend.title = element_text(size = 10), legend.text  = element_text(size = 10))
ggsave(fig_name,height=3,width=5)
}
}
